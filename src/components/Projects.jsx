import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { ExternalLink, Github, Play, Smartphone, Code, Heart, TrendingUp, Tv, Globe, Timer, Brain, Eye } from 'lucide-react';

const Projects = () => {
  const [selectedProject, setSelectedProject] = useState(null);

  const projects = [    {
      id: 1,
      title: "FocusFlow - AI Attention Detector",
      icon: <Brain size={24} />,
      image: 'https://i.imgur.com/pnn9GsL.jpeg', // You can replace with actual image
      short: "A custom-trained AI attention detector for YouTube lectures that auto-pauses on lapses, generates Gemini-powered quiz questions and concise summaries, then resumes playbook to reinforce learning.",
      story: "FocusFlow represents the intersection of AI, education, and user experience design. As part of my academic research at MTA, I developed this innovative web-based platform that transforms passive video watching into an active, personalized learning experience. The system uses real-time facial landmark tracking via MediaPipe and a custom-trained ONNX model to assess viewer engagement levels non-intrusively. When disengagement is detected, it presents contextually relevant questions generated by Google Gemini API, creating a closed-loop interactive learning system. The platform also provides valuable analytics for both students and educators, offering insights into focus patterns and enabling content refinement. This project demonstrates my ability to combine cutting-edge AI technologies with practical educational applications, resulting in a system that has been academically published and demonstrates real impact on learning outcomes.",
      link: 'https://the-jar-team.github.io/focus-flow-client/',
      linkGithub: 'https://github.com/The-JAR-Team/focus-flow-client',
      /*linkDemo: 'https://youtu.be/LBOM1oTzp9s',*/
      technologies: ['Python', 'Flask', 'MediaPipe', 'ONNX', 'PostgreSQL', 'Google Gemini API', 'React', 'PyTorch', 'Gunicorn'],      category: 'AI/Education',
      featured: true,
      research: true,
      academicPaper: "FocusFlow: AI-Driven Engagement Monitoring and Interaction for Educational Videos - Published at MTA Academic College"
    },    {
      id: 2,
      title: "Anamenztron",
      icon: <Heart size={24} />,
      image: 'https://renanbazinin.github.io/Anamnezatron1/images/anamnaz1high.png',
      short: "Helping users write medical records quickly and efficiently. Anamenztron = Anamnesis + tron",
      story: "This is a very special project in my heart. Back in 2019, I was in the army. I was a medic and stationed in a big clinic. On a normal day, I encountered at least 50 patients. Because of many legal laws in medical care, I needed to record many elaborate medical terms. This was so exhausting. Like 90% of the cases were with similar patterns. I knew Web programming languages and had an idea to make life easy. But the problem with the army is that you can't import web environment without hell. And I was only a medic. So I did it with pure vanilla JavaScript. Wrote in notepad++.",
      link: 'https://renanbazinin.github.io/Anamnezatron1/',
      linkGithub: 'https://github.com/renanbazinin/Anamnezatron1',
      technologies: ['Vanilla JavaScript', 'HTML5', 'CSS3'],
      category: 'Healthcare',
      featured: true
    },
    {      id: 3,
      title: "Graphs For Algorithms",
      icon: <Code size={24} />,
      image: 'https://i.imgur.com/WxVJGnE.png',
      short: "Graph visualization tool that supports interactive algorithms like BFS, DFS, and topological sort with real-time user input and customizable graph structures.",
      story: "I created this project to help me better understand graphs and their algorithms while studying this course at MTA. I find it really cool to see the algorithms in action on real graphs and in real-time.",
      link: 'https://renanbazinin.github.io/Graphs-For-Algorithms/',
      linkGithub: 'https://github.com/renanbazinin/Graphs-For-Algorithms',
      linkGooglePlay: 'https://play.google.com/store/apps/details?id=com.graphs.algo',
      technologies: ['JavaScript', 'Canvas API', 'Graph Theory', 'Algorithms'],
      category: 'Education',
      featured: true    },    {
      id: 4,
      title: "FreeTV",
      icon: <Tv size={24} />,
      short: "Site that shows free channels I found, mostly the basic channels from Israel",
      link: 'https://renanbazinin.github.io/myTV',
      linkGithub: 'https://github.com/renanbazinin/myTV',
      image: 'https://i.imgur.com/opmOlZ5.png',
      technologies: ['HTML', 'CSS', 'JavaScript'],
      category: 'Entertainment'
    },    {
      id: 4,
      title: "News Fetcher",
      icon: <Globe size={24} />,
      image: 'https://i.imgur.com/y6Zos1q.png',
      short: "News aggregation from famous sites",
      story: "The News Fetcher site aggregates the latest news from multiple sources, including BBC, NYT, Ynet, Maariv, N12, Rotter, Walla, Calcalist, and Haaretz, providing users with a consolidated view of current events.",
      link: 'https://renanbazinin.github.io/allNews/public/index.html',
      linkGithub: 'https://github.com/renanbazinin/allNews',
      linkGooglePlay: 'https://play.google.com/store/apps/details?id=com.rssallnews.allnews',
      technologies: ['RSS Feeds', 'JavaScript', 'API Integration'],
      category: 'News',
      featured: true
    },
    {
      id: 5,      title: "FullStack Course Project",
      icon: <TrendingUp size={24} />,
      short: "Site destined for managers who run movie-rental stores (like BlockBuster)",
      story: "After I discharged from the army, I got a free course in fullstack. I learned advanced JavaScript, React, and NoSQL (using Mongo). The course project was to create a site for a manager who runs a movie-rental store. The site allows the manager to manage movies and subscribers. Because in Heroku the _id is changing, I temporarily gave all other users that will create all permissions. So don't create new users. Only create/edit members (subscribers). Also, you can edit/add movies.",
      link: 'https://github.com/renanbazinin/FinalFullStack-Movies-managage/',
      linkGithub: 'https://github.com/renanbazinin/FinalFullStack-Movies-managage/',
      technologies: ['React', 'Node.js', 'MongoDB', 'Express'],
      category: 'Full-Stack',
      featured: false
    },
    {
      id: 6,      title: "Active Hue - Versatile Timer App",
      icon: <Timer size={24} />,
      short: "A multi-purpose timer app designed for workouts, study sessions, and focus intervals with customizable settings and vibrant color-coded visual feedback.",
      story: "Active Hue was built to provide users with an intuitive, customizable timer solution for a variety of activities. Whether you're engaging in high-intensity workouts, studying for an exam, or taking focused breaks, Active Hue adapts to your needs. The app offers both pre-configured quick timers for common activities and fully customizable timers, allowing users to set their own active, rest, and switch periods. With a sleek design, responsive layout, and always-on-screen functionality, Active Hue ensures that you stay on track without interruption.",
      link: 'https://renanbazinin.github.io/Active-Hue/',
      linkGithub: 'https://github.com/renanbazinin/Active-Hue',
      image: 'https://i.imgur.com/hSJu9dA.png',
      linkGooglePlay: 'https://play.google.com/store/apps/details?id=com.graphs.activehue',
      technologies: ['React', 'Responsive Design'],
      category: 'Productivity',
      featured: false
    }
  ];

  const categories = ['All', ...new Set(projects.map(p => p.category))];
  const [selectedCategory, setSelectedCategory] = useState('All');

  const filteredProjects = selectedCategory === 'All' 
    ? projects 
    : projects.filter(p => p.category === selectedCategory);

  const openProjectModal = (project) => {
    setSelectedProject(project);
  };

  const closeProjectModal = () => {
    setSelectedProject(null);
  };

  // Mobile responsive styles
  const mobileStyles = `
    @media (max-width: 768px) {
      .project-buttons {
        flex-direction: column !important;
        gap: 0.5rem !important;
      }
      
      .project-buttons .btn {
        width: 100% !important;
        min-width: auto !important;
      }
      
      .project-card {
        margin: 0 0.5rem;
      }
      
      .project-modal {
        padding: 1rem !important;
        margin: 0 0.5rem !important;
      }
      
      .project-modal h2 {
        font-size: 1.5rem !important;
      }
      
      .filter-buttons {
        justify-content: center !important;
        padding: 0 1rem;
      }
      
      .filter-buttons button {
        padding: 0.4rem 1rem !important;
        font-size: 0.8rem !important;
      }
    }
    
    @media (max-width: 480px) {
      .project-modal {
        padding: 1rem !important;
        max-width: 95vw !important;
      }
      
      .project-modal h2 {
        font-size: 1.25rem !important;
        line-height: 1.3;
      }
      
      .filter-buttons {
        gap: 0.25rem !important;
        flex-wrap: wrap;
      }
      
      .filter-buttons button {
        padding: 0.3rem 0.8rem !important;
        font-size: 0.75rem !important;
      }
      
      .project-buttons {
        gap: 0.4rem !important;
      }
      
      .project-buttons .btn {
        padding: 0.5rem 1rem !important;
        font-size: 0.8rem !important;
      }
    }
  `;

  // Add styles to head
  React.useEffect(() => {
    const styleElement = document.createElement('style');
    styleElement.textContent = mobileStyles;
    document.head.appendChild(styleElement);
    
    return () => {
      document.head.removeChild(styleElement);
    };
  }, []);

  return (
    <div className="section" style={{ paddingTop: '6rem' }}>
      <div className="container">
        {/* Header */}
        <motion.div 
          style={{ textAlign: 'center', marginBottom: '4rem' }}
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
        >
          <h1 className="section-title gradient-text">My Projects</h1>
          <p className="section-subtitle">
            A collection of applications and tools I've built to solve real-world problems and explore new technologies.
          </p>
        </motion.div>

        {/* Category Filter */}        <motion.div 
          style={{ 
            display: 'flex', 
            justifyContent: 'center', 
            marginBottom: '3rem',
            flexWrap: 'wrap',
            gap: '0.5rem'
          }}
          className="filter-buttons"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          {categories.map((category) => (
            <button
              key={category}
              onClick={() => setSelectedCategory(category)}              style={{
                padding: '0.5rem 1.5rem',
                borderRadius: '2rem',
                background: selectedCategory === category 
                  ? 'var(--gradient-primary)' 
                  : 'var(--surface-elevated)',
                color: selectedCategory === category 
                  ? 'white' 
                  : 'var(--text-secondary)',
                cursor: 'pointer',
                transition: 'all 0.3s ease',
                fontWeight: '500',
                border: selectedCategory === category 
                  ? 'none' 
                  : '1px solid var(--border)'
              }}
            >
              {category}
            </button>
          ))}
        </motion.div>

        {/* Featured Projects */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.3 }}
          style={{ marginBottom: '4rem' }}
        >
          <h2 style={{ textAlign: 'center', marginBottom: '2rem', color: 'var(--text-primary)' }}>
            Featured Projects
          </h2>          <div style={{ 
            display: 'grid', 
            gridTemplateColumns: 'repeat(auto-fit, minmax(min(400px, 100%), 1fr))', 
            gap: '2rem' 
          }}>
            {filteredProjects.filter(p => p.featured).map((project, index) => (
              <motion.div
                key={project.id}
                style={{
                  background: 'var(--surface-elevated)',
                  borderRadius: '1rem',
                  overflow: 'hidden',
                  boxShadow: 'var(--shadow-lg)',
                  border: '1px solid var(--border)',
                  cursor: 'pointer'
                }}
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.4 + (index * 0.1) }}
                whileHover={{ 
                  y: -10, 
                  boxShadow: 'var(--shadow-xl)',
                  transition: { duration: 0.3 }
                }}
                onClick={() => openProjectModal(project)}
              >
                {project.image && (
                  <div style={{ 
                    height: '200px', 
                    backgroundImage: `url(${project.image})`,
                    backgroundSize: 'cover',
                    backgroundPosition: 'center',
                    position: 'relative'
                  }}>
                    <div style={{
                      position: 'absolute',
                      top: '1rem',
                      left: '1rem',
                      background: 'rgba(0,0,0,0.7)',
                      color: 'white',
                      padding: '0.5rem',
                      borderRadius: '0.5rem',
                      display: 'flex',
                      alignItems: 'center',
                      gap: '0.5rem'
                    }}>
                      {project.icon}
                      <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>Featured</span>
                    </div>
                  </div>
                )}
                
                <div style={{ padding: '1.5rem' }}>
                  <h3 style={{ 
                    color: 'var(--text-primary)', 
                    marginBottom: '0.5rem',
                    fontSize: '1.25rem'
                  }}>
                    {project.title}
                  </h3>
                  
                  <p style={{ 
                    color: 'var(--text-secondary)', 
                    marginBottom: '1rem',
                    lineHeight: '1.6'
                  }}>
                    {project.short}
                  </p>
                  
                  <div style={{ 
                    display: 'flex', 
                    flexWrap: 'wrap', 
                    gap: '0.5rem',
                    marginBottom: '1rem'
                  }}>
                    {project.technologies.map((tech, techIndex) => (
                      <span 
                        key={techIndex}
                        style={{
                          background: 'var(--primary-color)',
                          color: 'white',
                          padding: '0.25rem 0.75rem',
                          borderRadius: '1rem',
                          fontSize: '0.75rem',
                          fontWeight: '500'
                        }}
                      >
                        {tech}
                      </span>
                    ))}
                  </div>                    <div style={{ display: 'flex', gap: '0.5rem', alignItems: 'center', flexWrap: 'wrap' }} className="project-buttons">
                    <a 
                      href={project.link} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="btn btn-primary"
                      style={{ fontSize: '0.875rem', padding: '0.5rem 1rem' }}
                      onClick={(e) => e.stopPropagation()}
                    >
                      <ExternalLink size={16} style={{ marginRight: '0.5rem' }} />
                      View Live
                    </a>
                    
                    {project.linkGithub && (
                      <a 
                        href={project.linkGithub} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        className="btn btn-secondary"
                        style={{ fontSize: '0.875rem', padding: '0.5rem 1rem' }}
                        onClick={(e) => e.stopPropagation()}
                      >
                        <Github size={16} style={{ marginRight: '0.5rem' }} />
                        GitHub
                      </a>
                    )}
                    
                    {project.linkDemo && (
                      <a 
                        href={project.linkDemo} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        className="btn btn-secondary"
                        style={{ fontSize: '0.875rem', padding: '0.5rem 1rem' }}
                        onClick={(e) => e.stopPropagation()}
                      >
                        <Play size={16} style={{ marginRight: '0.5rem' }} />
                        Demo
                      </a>
                    )}
                    
                    {project.linkGooglePlay && (
                      <a 
                        href={project.linkGooglePlay} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        className="btn btn-secondary"
                        style={{ fontSize: '0.875rem', padding: '0.5rem 1rem' }}
                        onClick={(e) => e.stopPropagation()}
                      >
                        <Smartphone size={16} style={{ marginRight: '0.5rem' }} />
                        Mobile App
                      </a>
                    )}
                    
                    {project.research && (
                      <span 
                        style={{
                          background: 'var(--gradient-accent)',
                          color: 'white',
                          padding: '0.5rem 1rem',
                          borderRadius: '0.5rem',
                          fontSize: '0.75rem',
                          fontWeight: '600',
                          display: 'flex',
                          alignItems: 'center',
                          gap: '0.25rem'
                        }}
                      >
                        <Eye size={14} />
                        Research
                      </span>
                    )}
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </motion.div>

        {/* Other Projects */}
        {filteredProjects.filter(p => !p.featured).length > 0 && (
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.5 }}
          >
            <h2 style={{ textAlign: 'center', marginBottom: '2rem', color: 'var(--text-primary)' }}>
              Other Projects
            </h2>            <div style={{ 
              display: 'grid', 
              gridTemplateColumns: 'repeat(auto-fill, minmax(min(300px, 100%), 1fr))', 
              gap: '1.5rem' 
            }}>
              {filteredProjects.filter(p => !p.featured).map((project, index) => (
                <motion.div
                  key={project.id}
                  style={{
                    background: 'var(--surface-elevated)',
                    padding: '1.5rem',
                    borderRadius: '0.75rem',
                    boxShadow: 'var(--shadow-md)',
                    border: '1px solid var(--border)',
                    cursor: 'pointer'
                  }}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: 0.6 + (index * 0.1) }}
                  whileHover={{ 
                    y: -5, 
                    boxShadow: 'var(--shadow-lg)',
                    transition: { duration: 0.3 }
                  }}
                  onClick={() => openProjectModal(project)}
                >
                  <div style={{ 
                    display: 'flex', 
                    alignItems: 'center', 
                    marginBottom: '1rem'
                  }}>
                    <div style={{ 
                      color: 'var(--primary-color)', 
                      marginRight: '0.75rem'
                    }}>
                      {project.icon}
                    </div>
                    <h3 style={{ 
                      color: 'var(--text-primary)', 
                      marginBottom: 0,
                      fontSize: '1.1rem'
                    }}>
                      {project.title}
                    </h3>
                  </div>
                  
                  <p style={{ 
                    color: 'var(--text-secondary)', 
                    marginBottom: '1rem',
                    fontSize: '0.95rem',
                    lineHeight: '1.5'
                  }}>
                    {project.short}
                  </p>
                  
                  <div style={{ 
                    display: 'flex', 
                    flexWrap: 'wrap', 
                    gap: '0.25rem',
                    marginBottom: '1rem'
                  }}>
                    {project.technologies.map((tech, techIndex) => (
                      <span 
                        key={techIndex}
                        style={{
                          background: 'var(--surface)',
                          color: 'var(--text-secondary)',
                          padding: '0.2rem 0.6rem',
                          borderRadius: '0.75rem',
                          fontSize: '0.7rem',
                          border: '1px solid var(--border)'
                        }}
                      >
                        {tech}
                      </span>
                    ))}
                  </div>
                    <div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap' }} className="project-buttons">
                    <a 
                      href={project.link} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="btn btn-primary"
                      style={{ fontSize: '0.875rem', padding: '0.5rem 1rem', flex: '1' }}
                      onClick={(e) => e.stopPropagation()}
                    >
                      <ExternalLink size={16} style={{ marginRight: '0.5rem' }} />
                      View Project
                    </a>
                    
                    {project.linkGithub && (
                      <a 
                        href={project.linkGithub} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        className="btn btn-secondary"
                        style={{ fontSize: '0.875rem', padding: '0.5rem 1rem' }}
                        onClick={(e) => e.stopPropagation()}
                      >
                        <Github size={16} />
                      </a>
                    )}
                  </div>
                </motion.div>
              ))}
            </div>
          </motion.div>
        )}

        {/* Project Modal */}
        {selectedProject && (
          <motion.div
            style={{
              position: 'fixed',
              top: 0,
              left: 0,
              right: 0,
              bottom: 0,
              background: 'rgba(0, 0, 0, 0.8)',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              zIndex: 1000,
              padding: '2rem'
            }}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={closeProjectModal}
          >            <motion.div
              style={{
                background: 'var(--surface-elevated)',
                borderRadius: '1rem',
                padding: '2rem',
                maxWidth: 'min(600px, 90vw)',
                maxHeight: '85vh',
                overflow: 'auto',
                position: 'relative',
                margin: '0 1rem'
              }}
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.8, opacity: 0 }}
              onClick={(e) => e.stopPropagation()}
            >
              <button
                onClick={closeProjectModal}
                style={{
                  position: 'absolute',
                  top: '1rem',
                  right: '1rem',
                  background: 'none',
                  border: 'none',
                  fontSize: '1.5rem',
                  cursor: 'pointer',
                  color: 'var(--text-secondary)'
                }}
              >
                ×
              </button>
              
              <h2 style={{ marginBottom: '1rem', color: 'var(--text-primary)' }}>
                {selectedProject.title}
              </h2>
              
              {selectedProject.image && (
                <img 
                  src={selectedProject.image} 
                  alt={selectedProject.title}
                  style={{
                    width: '100%',
                    height: '200px',
                    objectFit: 'cover',
                    borderRadius: '0.5rem',
                    marginBottom: '1rem'
                  }}
                />
              )}
              
              <p style={{ 
                color: 'var(--text-secondary)', 
                marginBottom: '1rem',
                lineHeight: '1.6'
              }}>
                {selectedProject.story || selectedProject.short}
              </p>
              
              <div style={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: '0.5rem',
                marginBottom: '1.5rem'
              }}>
                {selectedProject.technologies.map((tech, techIndex) => (
                  <span 
                    key={techIndex}
                    style={{
                      background: 'var(--primary-color)',
                      color: 'white',
                      padding: '0.25rem 0.75rem',
                      borderRadius: '1rem',
                      fontSize: '0.8rem',
                      fontWeight: '500'
                    }}
                  >
                    {tech}
                  </span>
                ))}
              </div>                <div style={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>
                <a 
                  href={selectedProject.link} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="btn btn-primary"
                >
                  <ExternalLink size={16} style={{ marginRight: '0.5rem' }} />
                  View Live
                </a>
                
                {selectedProject.linkGithub && (
                  <a 
                    href={selectedProject.linkGithub} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="btn btn-secondary"
                  >
                    <Github size={16} style={{ marginRight: '0.5rem' }} />
                    GitHub
                  </a>
                )}
                
                {selectedProject.linkDemo && (
                  <a 
                    href={selectedProject.linkDemo} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="btn btn-secondary"
                  >
                    <Play size={16} style={{ marginRight: '0.5rem' }} />
                    Watch Demo
                  </a>
                )}
                
                {selectedProject.linkGooglePlay && (
                  <a 
                    href={selectedProject.linkGooglePlay} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="btn btn-secondary"
                  >
                    <Smartphone size={16} style={{ marginRight: '0.5rem' }} />
                    Mobile App
                  </a>
                )}
                
                {selectedProject.research && (
                  <div style={{
                    background: 'var(--gradient-accent)',
                    color: 'white',
                    padding: '0.5rem 1rem',
                    borderRadius: '0.5rem',
                    fontSize: '0.875rem',
                    fontWeight: '600',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '0.5rem'
                  }}>
                    <Eye size={16} />
                    Academic Research
                  </div>
                )}
              </div>
            </motion.div>
          </motion.div>
        )}
      </div>
    </div>
  );
};

export default Projects;
